{
    "pendingOwner() returns (address)": [],
    "transferOwnership(address newOwner)": [
        {
            "potential_checks": "owner() != msg.sender",
            "involved_variables": [
                "newOwner"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "acceptOwnership()": [],
    "owner() returns (address)": [],
    "renounceOwnership()": [
        {
            "potential_checks": "owner() != msg.sender",
            "involved_variables": [],
            "descriptions": "",
            "references": []
        }
    ],
    "addInitialLiquidity(address lpOwner)": [],
    "isLiquidityPool(address queryAddress_) returns (bool)": [],
    "liquidityPools() returns (address[])": [],
    "addLiquidityPool(address newLiquidityPool_)": [],
    "removeLiquidityPool(address removedLiquidityPool_)": [],
    "isValidCaller(bytes32 queryHash_) returns (bool)": [],
    "validCallers() returns (bytes32[])": [],
    "addValidCaller(bytes32 newValidCallerHash_)": [],
    "removeValidCaller(bytes32 removedValidCallerHash_)": [],
    "setProjectTaxRecipient(address projectTaxRecipient_)": [],
    "setSwapThresholdBasisPoints(uint16 swapThresholdBasisPoints_)": [],
    "setProjectTaxRates(uint16 newProjectBuyTaxBasisPoints_, uint16 newProjectSellTaxBasisPoints_)": [],
    "totalBuyTaxBasisPoints() returns (uint256)": [],
    "totalSellTaxBasisPoints() returns (uint256)": [],
    "distributeTaxTokens()": [
        {
            "potential_checks": "projectTaxPendingSwap > 0",
            "involved_variables": [
                "uniswapV2Pair",
                "_tokenHasTax",
                "_autoSwapInProgress",
                "this",
                "to_",
                "amount_",
                "applyTax_",
                "fromBalance_",
                "from_",
                "fundedDate",
                "projectTaxPendingSwap"
            ],
            "descriptions": "",
            "references": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "_tokenHasTax",
                "fundedDate",
                "projectTaxPendingSwap"
            ]
        },
        {
            "potential_checks": "to_ == uniswapV2Pair && from_ != address(this) && fundedDate == 0 == False",
            "involved_variables": [
                "uniswapV2Pair",
                "_tokenHasTax",
                "_autoSwapInProgress",
                "this",
                "to_",
                "amount_",
                "applyTax_",
                "fromBalance_",
                "from_",
                "fundedDate",
                "projectTaxPendingSwap"
            ],
            "descriptions": "",
            "references": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "_tokenHasTax",
                "fundedDate",
                "projectTaxPendingSwap"
            ]
        },
        {
            "potential_checks": "fromBalance_ < amount_ == False",
            "involved_variables": [
                "uniswapV2Pair",
                "_tokenHasTax",
                "_autoSwapInProgress",
                "this",
                "to_",
                "amount_",
                "applyTax_",
                "fromBalance_",
                "from_",
                "fundedDate",
                "projectTaxPendingSwap"
            ],
            "descriptions": "",
            "references": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "_tokenHasTax",
                "fundedDate",
                "projectTaxPendingSwap"
            ]
        },
        {
            "potential_checks": "_tokenHasTax == False",
            "involved_variables": [
                "uniswapV2Pair",
                "_tokenHasTax",
                "_autoSwapInProgress",
                "this",
                "to_",
                "amount_",
                "applyTax_",
                "fromBalance_",
                "from_",
                "fundedDate",
                "projectTaxPendingSwap"
            ],
            "descriptions": "",
            "references": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "_tokenHasTax",
                "fundedDate",
                "projectTaxPendingSwap"
            ]
        },
        {
            "potential_checks": "_tokenHasTax && applyTax_ && ! _autoSwapInProgress == False",
            "involved_variables": [
                "uniswapV2Pair",
                "_tokenHasTax",
                "_autoSwapInProgress",
                "this",
                "to_",
                "amount_",
                "applyTax_",
                "fromBalance_",
                "from_",
                "fundedDate",
                "projectTaxPendingSwap"
            ],
            "descriptions": "",
            "references": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "_tokenHasTax",
                "fundedDate",
                "projectTaxPendingSwap"
            ]
        }
    ],
    "withdrawETH(uint256 amount_)": [],
    "withdrawERC20(address token_, uint256 amount_)": [],
    "burn(uint256 value)": [
        {
            "potential_checks": "accountBalance < amount == False",
            "involved_variables": [
                "accountBalance",
                "amount",
                "account"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "burnFrom(address account, uint256 value)": [
        {
            "potential_checks": "currentAllowance != type()(uint256).max",
            "involved_variables": [
                "amount",
                "spender",
                "currentAllowance",
                "owner"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "currentAllowance < amount == False",
            "involved_variables": [
                "amount",
                "spender",
                "currentAllowance",
                "owner"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "initialize(address[3] integrationAddresses_, bytes baseParams_, bytes supplyParams_, bytes taxParams_)": [],
    "name() returns (string)": [],
    "symbol() returns (string)": [],
    "decimals() returns (uint8)": [],
    "totalSupply() returns (uint256)": [],
    "balanceOf(address account) returns (uint256)": [],
    "transfer(address to, uint256 value) returns (bool)": [],
    "allowance(address owner, address spender) returns (uint256)": [],
    "approve(address spender, uint256 value) returns (bool)": [],
    "transferFrom(address from, address to, uint256 value) returns (bool)": [],
    "transfer(address to, uint256 amount) returns (bool)": [
        {
            "potential_checks": "to_ == uniswapV2Pair && from_ != address(this) && fundedDate == 0 == False",
            "involved_variables": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "this",
                "to_",
                "amount_",
                "applyTax_",
                "fromBalance_",
                "from_",
                "fundedDate",
                "_tokenHasTax"
            ],
            "descriptions": "",
            "references": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "_tokenHasTax",
                "fundedDate"
            ]
        },
        {
            "potential_checks": "fromBalance_ < amount_ == False",
            "involved_variables": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "this",
                "to_",
                "amount_",
                "applyTax_",
                "fromBalance_",
                "from_",
                "fundedDate",
                "_tokenHasTax"
            ],
            "descriptions": "",
            "references": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "_tokenHasTax",
                "fundedDate"
            ]
        },
        {
            "potential_checks": "_tokenHasTax == False",
            "involved_variables": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "this",
                "to_",
                "amount_",
                "applyTax_",
                "fromBalance_",
                "from_",
                "fundedDate",
                "_tokenHasTax"
            ],
            "descriptions": "",
            "references": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "_tokenHasTax",
                "fundedDate"
            ]
        },
        {
            "potential_checks": "_tokenHasTax && applyTax_ && ! _autoSwapInProgress == False",
            "involved_variables": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "this",
                "to_",
                "amount_",
                "applyTax_",
                "fromBalance_",
                "from_",
                "fundedDate",
                "_tokenHasTax"
            ],
            "descriptions": "",
            "references": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "_tokenHasTax",
                "fundedDate"
            ]
        }
    ],
    "approve(address spender, uint256 amount) returns (bool)": [],
    "transferFrom(address from, address to, uint256 amount) returns (bool)": [
        {
            "potential_checks": "currentAllowance != type()(uint256).max == False",
            "involved_variables": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "this",
                "to_",
                "amount_",
                "applyTax_",
                "fromBalance_",
                "from_",
                "currentAllowance",
                "fundedDate",
                "_tokenHasTax"
            ],
            "descriptions": "",
            "references": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "_tokenHasTax",
                "fundedDate"
            ]
        },
        {
            "potential_checks": "to_ == uniswapV2Pair && from_ != address(this) && fundedDate == 0 == False",
            "involved_variables": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "this",
                "to_",
                "amount_",
                "applyTax_",
                "fromBalance_",
                "from_",
                "currentAllowance",
                "fundedDate",
                "_tokenHasTax"
            ],
            "descriptions": "",
            "references": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "_tokenHasTax",
                "fundedDate"
            ]
        },
        {
            "potential_checks": "fromBalance_ < amount_ == False",
            "involved_variables": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "this",
                "to_",
                "amount_",
                "applyTax_",
                "fromBalance_",
                "from_",
                "currentAllowance",
                "fundedDate",
                "_tokenHasTax"
            ],
            "descriptions": "",
            "references": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "_tokenHasTax",
                "fundedDate"
            ]
        },
        {
            "potential_checks": "_tokenHasTax == False",
            "involved_variables": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "this",
                "to_",
                "amount_",
                "applyTax_",
                "fromBalance_",
                "from_",
                "currentAllowance",
                "fundedDate",
                "_tokenHasTax"
            ],
            "descriptions": "",
            "references": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "_tokenHasTax",
                "fundedDate"
            ]
        },
        {
            "potential_checks": "_tokenHasTax && applyTax_ && ! _autoSwapInProgress == False",
            "involved_variables": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "this",
                "to_",
                "amount_",
                "applyTax_",
                "fromBalance_",
                "from_",
                "currentAllowance",
                "fundedDate",
                "_tokenHasTax"
            ],
            "descriptions": "",
            "references": [
                "uniswapV2Pair",
                "_autoSwapInProgress",
                "_tokenHasTax",
                "fundedDate"
            ]
        }
    ],
    "increaseAllowance(address spender, uint256 addedValue) returns (bool)": [],
    "decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)": [
        {
            "potential_checks": "currentAllowance < subtractedValue == False",
            "involved_variables": [
                "spender",
                "currentAllowance",
                "subtractedValue",
                "owner"
            ],
            "descriptions": "",
            "references": []
        }
    ]
}