{
    "paused() returns (bool)": [],
    "pendingOwner() returns (address)": [],
    "renounceOwnership()": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before renouncing ownership.",
            "references": [
                "_owner"
            ]
        }
    ],
    "transferOwnership(address newOwner)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before transfer ownership.",
            "references": [
                "_owner"
            ]
        }
    ],
    "acceptOwnership()": [
        {
            "potential_checks": "_pendingOwner == msg.sender",
            "involved_variables": [
                "_pendingOwner",
                "msg.sender"
            ],
            "descriptions": "Verify caller is pending owner to accept ownership.",
            "references": [
                "_owner",
                "_pendingOwner"
            ]
        }
    ],
    "owner() returns (address)": [],
    "setSigner(address _signer)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before setting the signer.",
            "references": [
                "_signer"
            ]
        }
    ],
    "setClaimRoot(bytes32 _claimRoot)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before setting the claim root.",
            "references": [
                "_claimRoot"
            ]
        }
    ],
    "withdrawTokens(address receiver, uint256 amount)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before withdrawing tokens.",
            "references": [
                "balance"
            ]
        }
    ],
    "pause()": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before pausing the contract.",
            "references": [
                "_paused"
            ]
        }
    ],
    "unpause()": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before unpausing the contract.",
            "references": [
                "_paused"
            ]
        }
    ],
    "claim(bytes32[] _proof, bytes _signature, uint256 _amount, address _onBehalfOf)": [
        {
            "potential_checks": "recoveredSigner == signer",
            "involved_variables": [
                "signer",
                "_signature",
                "recoveredSigner"
            ],
            "descriptions": "Verify signature is signed by authorized signer.",
            "references": [
                "claimed"
            ]
        }
    ]
}