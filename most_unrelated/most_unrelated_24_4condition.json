{
    "supportsInterface(bytes4 interfaceId) returns (bool)": [],
    "hasRole(bytes32 role, address account) returns (bool)": [],
    "getRoleAdmin(bytes32 role) returns (bytes32)": [],
    "grantRole(bytes32 role, address account)": [
        {
        "potential_checks": "onlyRole(getRoleAdmin(role))",
        "involved_variables": ["role"],
        "descriptions": "Restrict write access to admin role.",
        "references": ["_roles"]
        }
    ],
    "revokeRole(bytes32 role, address account)": [
        {
        "potential_checks": "onlyRole(getRoleAdmin(role))",
        "involved_variables": ["role"],
        "descriptions": "Restrict write access to admin role.",
        "references": ["_roles"]
        }
    ],
    "renounceRole(bytes32 role, address callerConfirmation)": [],
    "deposit(address _asset, uint256 _amount, address _receiver) returns (uint256)": [],
    "mint(address _asset, uint256 _shares, address _receiver) returns (uint256)": [
        {
            "potential_checks": "depositPaused[_asset]",
            "involved_variables": [
                "_asset",
                "depositPaused"
            ],
            "descriptions": "Only allow deposits if not paused for the asset.",
            "references": [
                "lpToken"
            ]
        }
    ],
    "requestRedeem(uint256 _shares)": [
    ],
    "cancelRequest()": [],
    "claimRedeemRequest()": [
    ],
    "pendingRedeemRequest() returns (uint256)": [
    ],
    "claimableRedeemRequest() returns (uint256)": [
    ],
    "totalAssets() returns (uint256)": [
    ],
    "activeShares() returns (uint256)": [],
    "convertToShares(uint256 _assets) returns (uint256)": [
    ],
    "convertToAssets(uint256 _shares) returns (uint256)": [
    ],
    "previewDeposit(address _asset, uint256 _amount) returns (uint256)": [
    ],
    "previewMint(address _asset, uint256 _shares) returns (uint256)": [
     
    ],
    "getRate() returns (uint256)": [

    ],
    "getUnderlyings() returns (address[])": [],
    "rollToNextRound()": [
        {
            "potential_checks": "hasRole(VAULT_OPERATOR_ROLE,msg.sender)",
            "involved_variables": [
                "msg.sender",
                "_roles"
            ],
            "descriptions": "Restrict write access to Vault Operator role.",
            "references": [
                "withdrawToken",
                "redeemableAmountInPast",
                "requestingSharesInRound",
                "roundPricePerShare",
                "withdrawTokenPrice",
                "latestRoundID"
            ]
        }
    ],
    "withdrawAssets(address _asset, uint256 _amount)": [
        {
            "potential_checks": "hasRole(ASSETS_MANAGEMENT_ROLE,msg.sender)",
            "involved_variables": [
                "msg.sender",
                "_roles"
            ],
            "descriptions": "Restrict write access to Vault Operator role.",
            "references": [
                "assetsBorrowed",
                "_balances"

            ]
        },
        {
            "potential_checks": "! isUnderlyingAssets[_asset]",
            "involved_variables": [
                "_asset",
                "isUnderlyingAssets"
            ],
            "descriptions": "Ensure asset is a valid underlying asset.",
            "references": [
                "assetsBorrowed",
                "_balances"
            ]
        }
    ],
    "repayAssets(address _asset, uint256 _amount)": [
        {
            "potential_checks": "hasRole(ASSETS_MANAGEMENT_ROLE,msg.sender)",
            "involved_variables": [
                "msg.sender",
                "_roles"
            ],
            "descriptions": "Restrict write access to Vault Operator role.",
            "references": [
                "assetsBorrowed",
                "_balances"

            ]
        },
        {
            "potential_checks": "! isUnderlyingAssets[_asset]",
            "involved_variables": [
                "_asset",
                "isUnderlyingAssets"
            ],
            "descriptions": "Ensure asset is a valid underlying asset.",
            "references": [
                "assetsBorrowed",
                "_balances"
            ]
        }
    ],
    "removeUnderlyingAsset(address _asset)": [
                {
            "potential_checks": "hasRole(ASSETS_MANAGEMENT_ROLE,msg.sender)",
            "involved_variables": [
                "msg.sender",
                "_roles"
            ],
            "descriptions": "Restrict write access to Vault Operator role.",
            "references": [
                "assetsBorrowed",
                "_balances"

            ]
        },
        {
            "potential_checks": "! isUnderlyingAssets[_asset]",
            "involved_variables": [
                "_asset",
                "isUnderlyingAssets"
            ],
            "descriptions": "Ensure asset is a valid underlying asset.",
            "references": [
                "assetsBorrowed",
                "_balances"
            ]
        }
    ],
    "setDepositPause(address _token, bool _pause)": [
        {
        "potential_checks": "hasRole(VAULT_OPERATOR_ROLE,msg.sender)",
        "involved_variables": ["msg.sender","_roles"],
        "descriptions": "Restrict write access to Vault Operator role.",
        "references": ["depositPaused"]
        }
    ],
    "setFeeRate(address _token, uint256 _feeRate)": [
        {
        "potential_checks": "hasRole(VAULT_OPERATOR_ROLE,msg.sender)",
        "involved_variables": ["msg.sender","_roles"],
        "descriptions": "Restrict write access to Vault Operator role.",
        "references": ["feeRate"]
        },
        {
        "potential_checks": "isUnderlyingAssets[_token]",
        "involved_variables": ["isUnderlyingAssets", "_token"],
        "descriptions": "Ensure token is a valid underlying asset.",
        "references": ["feeRate"]
        }
    ],
    "setFeeRecipient(address _feeRecipient)": [
        {
        "potential_checks": "hasRole(VAULT_OPERATOR_ROLE,msg.sender)",
        "involved_variables": ["msg.sender","_roles"],
        "descriptions": "Restrict write access to Vault Operator role.",
        "references": ["feeRecipient"]
        }
    ]
}