{
    "withdraw()": [
        {
            "potential_checks": "!bought_tokens",
            "involved_variables": [
                "bought_tokens"
            ],
            "descriptions": "Prevent re-purchasing tokens.",
            "references": [
                "balances"
            ]
        }
    ],
    "refund_me()": [
        {
            "potential_checks": "!bought_tokens",
            "involved_variables": [
                "bought_tokens"
            ],
            "descriptions": "Prevent re-purchasing tokens.",
            "references": [
                "balances"
            ]
        }
    ],
    "buy_the_tokens(string _password)": [
        {
            "potential_checks": "msg.sender == creator || hash_pwd == keccak256(_password)",
            "involved_variables": [
                "msg.sender",
                "creator",
                "hash_pwd",
                "_password"
            ],
            "descriptions": "Restrict access to creator/password holders and ensures password is hashed.",
            "references": [
                "hash_pwd",
                "buy_block",
                "bought_tokens",
                "contract_eth_value"
            ]
        }
    ],
    "set_sale_address(address _sale, string _password)": [
        {
            "potential_checks": "msg.sender == creator || hash_pwd == keccak256(_password)",
            "involved_variables": [
                "msg.sender",
                "creator",
                "hash_pwd",
                "_password"
            ],
            "descriptions": "Restrict access to creator/password holders and ensures password is hashed.",
            "references": [
                "sale"
            ]
        }
    ],
    "set_token_address(address _token, string _password)": [
        {
            "potential_checks": "msg.sender == creator || hash_pwd == keccak256(_password)",
            "involved_variables": [
                "msg.sender",
                "creator",
                "hash_pwd",
                "_password"
            ],
            "descriptions": "Restrict access to creator/password holders and ensures password is hashed.",
            "references": [
                "token"
            ]
        }
    ],
    "emergy_withdraw(address _token)": [
        {
            "potential_checks": "block.number >= (buy_block + 43953)",
            "involved_variables": [
                "block.number",
                "buy_block"
            ],
            "descriptions": "Enforce 1-week delay after token purchase.",
            "references": [
                "balances",
                "emergency_used"
            ]
        }
    ]
}