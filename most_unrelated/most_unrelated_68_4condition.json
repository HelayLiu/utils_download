{
    "owner() returns (address)": [],
    "renounceOwnership()": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before renouncing ownership.",
            "references": [
                "_owner"
            ]
        }
    ],
    "transferOwnership(address newOwner)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before transfer ownership.",
            "references": [
                "_owner"
            ]
        }
    ],
    "name() returns (string)": [],
    "symbol() returns (string)": [],
    "decimals() returns (uint8)": [],
    "totalSupply() returns (uint256)": [],
    "balanceOf(address account) returns (uint256)": [],
    "transfer(address to, uint256 amount) returns (bool)": [
        {
            "potential_checks": "! _blacklist[msg.sender] && !_blacklist[to]",
            "involved_variables": [
                "_blacklist",
                "msg.sender",
                "to"
            ],
            "descriptions": "Ensure that the caller and to is not blacklisted",
            "references": [
                "_balances"
            ]
        }
    ],
    "allowance(address owner, address spender) returns (uint256)": [],
    "approve(address spender, uint256 amount) returns (bool)": [],
    "transferFrom(address from, address to, uint256 amount) returns (bool)": [
        {
            "potential_checks": "_allowances[from][msg.sender] >= amount",
            "involved_variables": [
                "from",
                "msg.sender",
                "amount",
                "_allowances"
            ],
            "descriptions": "Ensure that the spender has enough allowance to transfer from the sender.",
            "references": [
                "_allowances",
                "_balances"
            ]
        },
                {
            "potential_checks": "! _blacklist[from] && !_blacklist[to]",
            "involved_variables": [
                "_blacklist",
                "from",
                "to"
            ],
            "descriptions": "Ensure that the from and to is not blacklisted",
            "references": [
                "_balances"
            ]
        }
    ],
    "increaseAllowance(address spender, uint256 addedValue) returns (bool)": [],
    "decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)": [
    ],
    "claim(uint256 amount)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Restrict to contract owner",
            "references": [
                "_totalSupply",
                "_balances",
                "cyclicBarrier",
                "lastClaimTime"
            ]
        },
        {
            "potential_checks": "! _blacklist[msg.sender]",
            "involved_variables": [
                "_blacklist",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is not blacklisted",
            "references": [
                "_totalSupply",
                "_balances",
                "cyclicBarrier",
                "lastClaimTime"
            ]
        }
    ],
    "claims(uint256 amount)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Restrict to contract owner",
            "references": [
                "_totalSupply",
                "_balances",
                "cyclicBarrier",
                "lastClaimTime"
            ]
        },
        {
            "potential_checks": "! _blacklist[msg.sender]",
            "involved_variables": [
                "_blacklist",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is not blacklisted",
            "references": [
                "_totalSupply",
                "_balances",
                "cyclicBarrier",
                "lastClaimTime"
            ]
        }
    ],
    "addToBlacklist(address account)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Restrict to contract owner",
            "references": [
                "_blacklist"
            ]
        }
    ],
    "removeFromBlacklist(address account)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Restrict to contract owner",
            "references": [
                "_blacklist"
            ]
        }
    ],
    "isBlacklisted(address account) returns (bool)": [],
    "burn(uint256 amout)": [
        {
            "potential_checks": "! _blacklist[msg.sender]",
            "involved_variables": [
                "_blacklist",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is not blacklisted",
            "references": [
                "_balances",
                "_totalSupply"
            ]
        }
    ]
}