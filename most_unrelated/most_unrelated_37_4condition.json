{
    "owner() returns (address)": [],
    "renounceOwnership()": [
        {
            "potential_checks": "owner() == msg.sender == False",
            "involved_variables": [],
            "descriptions": "",
            "references": []
        }
    ],
    "transferOwnership(address newOwner)": [
        {
            "potential_checks": "owner() == msg.sender",
            "involved_variables": [
                "newOwner"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "name() returns (string)": [],
    "symbol() returns (string)": [],
    "decimals() returns (uint8)": [],
    "totalSupply() returns (uint256)": [],
    "balanceOf(address account) returns (uint256)": [],
    "transfer(address to, uint256 amount) returns (bool)": [],
    "allowance(address owner, address spender) returns (uint256)": [],
    "approve(address spender, uint256 amount) returns (bool)": [],
    "transferFrom(address from, address to, uint256 amount) returns (bool)": [],
    "increaseAllowance(address spender, uint256 addedValue) returns (bool)": [],
    "decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)": [
        {
            "potential_checks": "currentAllowance >= subtractedValue",
            "involved_variables": [
                "spender",
                "currentAllowance",
                "subtractedValue",
                "owner"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "launch(string name, string symbol, uint256 amountLeft)": [
        {
            "potential_checks": "owner() == msg.sender",
            "involved_variables": [
                "spender",
                "tradingActive",
                "owner"
            ],
            "descriptions": "",
            "references": [
                "tradingActive"
            ]
        },
        {
            "potential_checks": "tradingActive",
            "involved_variables": [
                "spender",
                "tradingActive",
                "owner"
            ],
            "descriptions": "",
            "references": [
                "tradingActive"
            ]
        }
    ],
    "limitsOff() returns (bool)": [
        {
            "potential_checks": "owner() == msg.sender == False",
            "involved_variables": [],
            "descriptions": "",
            "references": []
        }
    ],
    "updateSwapTokensAtAmount(uint256 newAmount) returns (bool)": [
        {
            "potential_checks": "owner() == msg.sender",
            "involved_variables": [
                "newAmount"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "newAmount >= (totalSupply() * 1) / 100000",
            "involved_variables": [
                "newAmount"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "newAmount <= (totalSupply() * 4) / 100 == False",
            "involved_variables": [
                "newAmount"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "updateSwapEnabled(bool enabled)": [
        {
            "potential_checks": "owner() == msg.sender == False",
            "involved_variables": [],
            "descriptions": "",
            "references": []
        }
    ],
    "updateMaxTransaction(uint256 newNum)": [
        {
            "potential_checks": "owner() == msg.sender",
            "involved_variables": [
                "newNum"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "newNum >= ((totalSupply() * 1) / 1000) / 1e18 == False",
            "involved_variables": [
                "newNum"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "updateMaxWallet(uint256 newNum)": [
        {
            "potential_checks": "owner() == msg.sender",
            "involved_variables": [
                "newNum"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "newNum >= ((totalSupply() * 1) / 1000) / 1e18 == False",
            "involved_variables": [
                "newNum"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "disableWalletLimits(address updAds, bool isEx)": [
        {
            "potential_checks": "owner() == msg.sender == False",
            "involved_variables": [],
            "descriptions": "",
            "references": []
        }
    ],
    "setBuyFees(uint256 _marketingFee, uint256 _liquidityFee)": [
        {
            "potential_checks": "owner() == msg.sender",
            "involved_variables": [
                "buyTotalFees"
            ],
            "descriptions": "",
            "references": [
                "buyTotalFees"
            ]
        },
        {
            "potential_checks": "buyTotalFees <= 30 == False",
            "involved_variables": [
                "buyTotalFees"
            ],
            "descriptions": "",
            "references": [
                "buyTotalFees"
            ]
        }
    ],
    "setSellFees(uint256 _marketingFee, uint256 _liquidityFee)": [
        {
            "potential_checks": "owner() == msg.sender",
            "involved_variables": [
                "sellTotalFees"
            ],
            "descriptions": "",
            "references": [
                "sellTotalFees"
            ]
        },
        {
            "potential_checks": "sellTotalFees <= 30 == False",
            "involved_variables": [
                "sellTotalFees"
            ],
            "descriptions": "",
            "references": [
                "sellTotalFees"
            ]
        }
    ],
    "_excludeFromFees(address account, bool excluded)": [
        {
            "potential_checks": "owner() == msg.sender == False",
            "involved_variables": [],
            "descriptions": "",
            "references": []
        }
    ],
    "excludeFromFees(address account, bool excluded)": [
        {
            "potential_checks": "owner() == msg.sender == False",
            "involved_variables": [],
            "descriptions": "",
            "references": []
        }
    ],
    "setAutomatedMarketMakerPair(address pair, bool value)": [
        {
            "potential_checks": "owner() == msg.sender",
            "involved_variables": [
                "pair",
                "uniswapV2Pair"
            ],
            "descriptions": "",
            "references": [
                "uniswapV2Pair"
            ]
        },
        {
            "potential_checks": "pair != uniswapV2Pair == False",
            "involved_variables": [
                "pair",
                "uniswapV2Pair"
            ],
            "descriptions": "",
            "references": [
                "uniswapV2Pair"
            ]
        }
    ],
    "updateMarketingWallet(address _Treasury)": [
        {
            "potential_checks": "owner() == msg.sender == False",
            "involved_variables": [],
            "descriptions": "",
            "references": []
        }
    ],
    "isExcludedFromFees(address account) returns (bool)": [],
    "blacklist(address _address, bool _isBlacklisting)": [
        {
            "potential_checks": "owner() == msg.sender",
            "involved_variables": [
                "uniswapV2Pair",
                "routerAddress",
                "_address",
                "blacklistRenounced"
            ],
            "descriptions": "",
            "references": [
                "uniswapV2Pair",
                "routerAddress",
                "blacklistRenounced"
            ]
        },
        {
            "potential_checks": "blacklistRenounced",
            "involved_variables": [
                "uniswapV2Pair",
                "routerAddress",
                "_address",
                "blacklistRenounced"
            ],
            "descriptions": "",
            "references": [
                "uniswapV2Pair",
                "routerAddress",
                "blacklistRenounced"
            ]
        },
        {
            "potential_checks": "_address != address(uniswapV2Pair)",
            "involved_variables": [
                "uniswapV2Pair",
                "routerAddress",
                "_address",
                "blacklistRenounced"
            ],
            "descriptions": "",
            "references": [
                "uniswapV2Pair",
                "routerAddress",
                "blacklistRenounced"
            ]
        },
        {
            "potential_checks": "_address != address(routerAddress) == False",
            "involved_variables": [
                "uniswapV2Pair",
                "routerAddress",
                "_address",
                "blacklistRenounced"
            ],
            "descriptions": "",
            "references": [
                "uniswapV2Pair",
                "routerAddress",
                "blacklistRenounced"
            ]
        }
    ],
    "renounceBlacklist()": [
        {
            "potential_checks": "owner() == msg.sender == False",
            "involved_variables": [],
            "descriptions": "",
            "references": []
        }
    ],
    "unsetReducedFirstBlock()": [
        {
            "potential_checks": "owner() == msg.sender == False",
            "involved_variables": [],
            "descriptions": "",
            "references": []
        }
    ],
    "updateRestrictSwapBack(bool newVal)": [
        {
            "potential_checks": "owner() == msg.sender == False",
            "involved_variables": [],
            "descriptions": "",
            "references": []
        }
    ],
    "removeStuckTokens()": [
        {
            "potential_checks": "owner() == msg.sender",
            "involved_variables": [
                "spender",
                "owner"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "recoverETH()": [
        {
            "potential_checks": "owner() == msg.sender == False",
            "involved_variables": [],
            "descriptions": "",
            "references": []
        }
    ],
    "recoverTokens(address token)": [
        {
            "potential_checks": "owner() == msg.sender",
            "involved_variables": [
                "success",
                "tokenBalance"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "tokenBalance > 0",
            "involved_variables": [
                "success",
                "tokenBalance"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "IERC20(token).transfer(Treasury,tokenBalance) == False",
            "involved_variables": [
                "success",
                "tokenBalance"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "allocateReserve(uint256 amount)": [
        {
            "potential_checks": "owner() == msg.sender",
            "involved_variables": [
                "this",
                "amount",
                "fromBalance",
                "to",
                "from"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "amount > 0",
            "involved_variables": [
                "this",
                "amount",
                "fromBalance",
                "to",
                "from"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "balanceOf(address(this)) >= amount",
            "involved_variables": [
                "this",
                "amount",
                "fromBalance",
                "to",
                "from"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "fromBalance >= amount == False",
            "involved_variables": [
                "this",
                "amount",
                "fromBalance",
                "to",
                "from"
            ],
            "descriptions": "",
            "references": []
        }
    ]
}