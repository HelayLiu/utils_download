{
    "owner() returns (address)": [],
    "renounceOwnership()": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before renouncing ownership.",
            "references": [
                "_owner"
            ]
        }
    ],
    "transferOwnership(address newOwner)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before transfer ownership.",
            "references": [
                "_owner"
            ]
        }
    ],
    "name() returns (string)": [],
    "symbol() returns (string)": [],
    "decimals() returns (uint8)": [],
    "totalSupply() returns (uint256)": [],
    "balanceOf(address account) returns (uint256)": [],
    "transfer(address to, uint256 value) returns (bool)": [],
    "allowance(address owner, address spender) returns (uint256)": [],
    "approve(address spender, uint256 value) returns (bool)": [],
    "transferFrom(address from, address to, uint256 value) returns (bool)": [
        {
            "potential_checks": "_allowances[from][msg.sender] >= value || _allowances[from][msg.sender] == type(uint256).max",
            "involved_variables": [
                "from",
                "msg.sender",
                "value",
                "_allowances"
            ],
            "descriptions": "Ensure that the spender has enough allowance to transfer from the owner.",
            "references": [
                "_allowances",
                "_balances"
            ]
        }
    ],
    "isContract(address addr) returns (bool)": [],
    "isExcludeFee(address account) returns (bool)": [],
    "setLaunch(bool value)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before setting launch status.",
            "references": [
                "tradingEnable",
                "tradeStartTime"
            ]
        }
    ],
    "setExcludeFee(address[] addrs, bool value)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before setting exclude fee status.",
            "references": ["excludeFeeList"]
        }
    ],
    "setAutoLPBurnSettings(uint256 _frequencyInSeconds, uint256 _percent, uint256 _div, bool _Enabled)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before setting auto LP burn settings.",
            "references": [
                "lpBurnFrequency",
                "percentForLPBurn",
                "percentDiv",
                "lpBurnEnabled"
            ]
        }
    ],
    "addLiquidity()": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before adding liquidity.",
            "references": [
                "addLiquidityFlag",
                "_allowances"
            ]
        }
    ]
}