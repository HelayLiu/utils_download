{
    "owner() returns (address)": [],
    "renounceOwnership()": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before renouncing ownership.",
            "references": [
                "_owner"
            ]
        }
    ],
    "transferOwnership(address newOwner)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before transfer ownership.",
            "references": [
                "_owner"
            ]
        }
    ],
    "proxiableUUID() returns (bytes32)": [],
    "upgradeTo(address newImplementation)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Only the owner can upgrade the implementation.",
            "references": [
                "implementation"
            ]
        }
    ],
    "upgradeToAndCall(address newImplementation, bytes data)": [
                {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Only the owner can upgrade the implementation.",
            "references": [
                "implementation"
            ]
        }
    
    ],
    "initialize(address _swapRouter, address _fastTransferGateway)": [
    ],
    "setSwapRouter(address _swapRouter)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": ["_owner", "msg.sender"],
            "descriptions": "Restrict SwapRouter updates to contract owner.",
            "references": ["swapRouter"]
        }
    ],
    "setFastTransferGateway(address _fastTransferGateway)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": ["_owner", "msg.sender"],
            "descriptions": "Restrict FastTransferGateway updates to contract owner.",
            "references": ["FastTransferGateway"]
        }
    ],
    "swapAndSubmitOrder(address tokenIn, uint256 swapAmountIn, bytes swapCalldata, uint256 executionFeeAmount, uint256 solverFeeBPS, bytes32 sender, bytes32 recipient, uint32 destinationDomain, uint64 timeoutTimestamp, bytes destinationCalldata) returns (bytes32)": [
    ],
    "submitOrder(bytes32 sender, bytes32 recipient, uint256 amountIn, uint256 amountOut, uint32 destinationDomain, uint64 timeoutTimestamp, bytes data) returns (bytes32)": []
}