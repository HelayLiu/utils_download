{
    "owner() returns (address)": [],
    "renounceOwnership()": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before renouncing ownership.",
            "references": [
                "_owner"
            ]
        }
    ],
    "transferOwnership(address newOwner)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before transfer ownership.",
            "references": [
                "_owner"
            ]
        }
    ],
    "geUnlockTime() returns (uint256)": [],
    "lock(uint256 time)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before locking.",
            "references": [
                "_lockTime"
            ]
        }
    ],
    "unlock()": [
        {
            "potential_checks": "_previousOwner == msg.sender",
            "involved_variables": [
                "msg.sender",
                "_previousOwner"
            ],
            "descriptions": "Ensure that the caller is the previous owner before unlocking.",
            "references": [
                "_owner"
            ]
        }
    ],
    "totalSupply() returns (uint256)": [],
    "balanceOf(address account) returns (uint256)": [
 
    ],
    "transfer(address recipient, uint256 amount) returns (bool)": [
   
    ],
    "allowance(address owner, address spender) returns (uint256)": [],
    "approve(address spender, uint256 amount) returns (bool)": [],
    "transferFrom(address sender, address recipient, uint256 amount) returns (bool)": [
        {
            "potential_checks": "_allowances[sender][msg.sender] >= amount",
            "involved_variables": [
                "sender",
                "msg.sender",
                "amount",
                "_allowances"
            ],
            "descriptions": "Ensure that the spender has enough allowance to transfer from the sender.",
            "references": [
                "_allowances",
                "_balances",
                "_totalSupply"
            ]
        }
    ],
    "name() returns (string)": [],
    "symbol() returns (string)": [],
    "decimals() returns (uint8)": [],
    "increaseAllowance(address spender, uint256 addedValue) returns (bool)": [],
    "decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)": [],
    "isExcludedFromReward(address account) returns (bool)": [],
    "totalFees() returns (uint256)": [],
    "deliver(uint256 tAmount)": [
        {
            "potential_checks": "!_isExcluded[msg.sender]",
            "involved_variables": ["msg.sender","_isExcluded"],
            "descriptions": "Restrict fee delivery to non-excluded accounts.",
            "references": ["_rOwned", "_rTotal","_tFeeTotal"]
        }
    ],
    "reflectionFromToken(uint256 tAmount, bool deductTransferFee) returns (uint256)": [
     
    ],
    "tokenFromReflection(uint256 rAmount) returns (uint256)": [
     
    ],
    "excludeFromReward(address account)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [

                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before excluding from reward.",
            "references": [
                "_isExcluded",
                "_tOwned",
                "_excluded"
            ]
        }
    ],
    "includeInReward(address account)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before including in reward.",
            "references": [
                "_isExcluded",
                "_tOwned",
                "_excluded"
            ]
        }
    ],
    "excludeFromFee(address account)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"

            ],
            "descriptions": "Ensure that the caller is the current owner before excluding from fee.",
            "references": [
                "_isExcludedFromFee"
            ]
        }
    ],
    "includeInFee(address account)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before including in fee.",
            "references": [
                "_isExcludedFromFee"
            ]
        }
    ],
    "setTaxFeePercent(uint256 taxFee)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before setting tax fee percent.",
            "references": [
                "_taxFee"
            ]
        }
    ],
    "setLiquidityFeePercent(uint256 liquidityFee)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before setting liquidity fee percent.",
            "references": [
                "_liquidityFee"
            ]
        }
    ],
    "setMaxTxPercent(uint256 maxTxPercent)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before setting max transaction percent.",
            "references": [
                "_maxTxAmount"
            ]
        }
    ],
    "setSwapAndLiquifyEnabled(bool _enabled)": [
        {
            "potential_checks": "_owner == msg.sender",
            "involved_variables": [
                "_owner",
                "msg.sender"
            ],
            "descriptions": "Ensure that the caller is the current owner before enabling swap and liquify.",
            "references": [
                "swapAndLiquifyEnabled"
            ]
        }
    ],
    "isExcludedFromFee(address account) returns (bool)": []
}