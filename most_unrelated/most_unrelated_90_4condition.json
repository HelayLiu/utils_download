{
    "owner() returns (address)": [],
    "renounceOwnership()": [
        {
            "potential_checks": "owner() != msg.sender",
            "involved_variables": [],
            "descriptions": "",
            "references": []
        }
    ],
    "transferOwnership(address newOwner)": [
        {
            "potential_checks": "owner() != msg.sender",
            "involved_variables": [
                "newOwner"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "supportsInterface(bytes4 interfaceId) returns (bool)": [],
    "royaltyInfo(uint256 tokenId, uint256 salePrice) returns (address, uint256)": [],
    "totalSupply() returns (uint256)": [],
    "balanceOf(address owner) returns (uint256)": [],
    "name() returns (string)": [],
    "symbol() returns (string)": [],
    "tokenURI(uint256 tokenId) returns (string)": [],
    "ownerOf(uint256 tokenId) returns (address)": [],
    "approve(address to, uint256 tokenId)": [],
    "getApproved(uint256 tokenId) returns (address)": [],
    "setApprovalForAll(address operator, bool approved)": [],
    "isApprovedForAll(address owner, address operator) returns (bool)": [],
    "transferFrom(address from, address to, uint256 tokenId)": [],
    "safeTransferFrom(address from, address to, uint256 tokenId)": [],
    "safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)": [],
    "safeTransferFrom(address from, address to, uint256 tokenId, bytes data)": [],
    "setApprovalForAll(address operator, bool _approved)": [],
    "mintLive() returns (bool)": [
        {
            "potential_checks": "! contractMintLive",
            "involved_variables": [
                "block.timestamp",
                "contractMintLive",
                "scheduledMintLiveTimestamp"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive",
                "scheduledMintLiveTimestamp"
            ]
        },
        {
            "potential_checks": "scheduledMintLiveTimestamp == 0 || block.timestamp <= scheduledMintLiveTimestamp",
            "involved_variables": [
                "block.timestamp",
                "contractMintLive",
                "scheduledMintLiveTimestamp"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive",
                "scheduledMintLiveTimestamp"
            ]
        }
    ],
    "setNewMaxPerMintGroup(uint256 mintId, uint256 newMax)": [],
    "setMintQuota(address[] addressToAdd, uint256 mintId, uint256[] _mintQuotas)": [],
    "stopOrStartpresaleMint(bool presaleStatus, uint256 mintId)": [],
    "schedulePresaleMintStart(uint256 startTimestamp, uint256 mintId)": [],
    "presaleActive(uint256 mintId) returns (bool)": [
        {
            "potential_checks": "! contractPresaleActive[mintId]",
            "involved_variables": [
                "contractPresaleActive",
                "block.timestamp",
                "presaleScheduledStartTimestamp",
                "mintId"
            ],
            "descriptions": "",
            "references": [
                "contractPresaleActive",
                "presaleScheduledStartTimestamp"
            ]
        },
        {
            "potential_checks": "presaleScheduledStartTimestamp[mintId] == 0 || block.timestamp <= presaleScheduledStartTimestamp[mintId]",
            "involved_variables": [
                "contractPresaleActive",
                "block.timestamp",
                "presaleScheduledStartTimestamp",
                "mintId"
            ],
            "descriptions": "",
            "references": [
                "contractPresaleActive",
                "presaleScheduledStartTimestamp"
            ]
        }
    ],
    "setMaxMintPerWallet(uint256 newMaxMintPerWallet, uint256 mintGroupId)": [
        {
            "potential_checks": "owner() != msg.sender",
            "involved_variables": [],
            "descriptions": "",
            "references": []
        }
    ],
    "changeSalePrice(uint256 newmintPrice, uint256 mintId)": [],
    "airdropNFTs(address[] recipients, uint256[] amounts) returns (uint256)": [
        {
            "potential_checks": "owner() != msg.sender",
            "involved_variables": [
                "msg.value",
                "success",
                "j",
                "excess",
                "totalCharge",
                "recipients",
                "amounts",
                "i"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "recipients.length != amounts.length == False",
            "involved_variables": [
                "msg.value",
                "success",
                "j",
                "excess",
                "totalCharge",
                "recipients",
                "amounts",
                "i"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "i < amounts.length == False",
            "involved_variables": [
                "msg.value",
                "success",
                "j",
                "excess",
                "totalCharge",
                "recipients",
                "amounts",
                "i"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "msg.value < totalCharge == False",
            "involved_variables": [
                "msg.value",
                "success",
                "j",
                "excess",
                "totalCharge",
                "recipients",
                "amounts",
                "i"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "j < recipients.length == False",
            "involved_variables": [
                "msg.value",
                "success",
                "j",
                "excess",
                "totalCharge",
                "recipients",
                "amounts",
                "i"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "excess > 0",
            "involved_variables": [
                "msg.value",
                "success",
                "j",
                "excess",
                "totalCharge",
                "recipients",
                "amounts",
                "i"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "! success == False",
            "involved_variables": [
                "msg.value",
                "success",
                "j",
                "excess",
                "totalCharge",
                "recipients",
                "amounts",
                "i"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "canMintCheck(uint256 amount, uint256 mintId, address minterAddress) returns (bool, string)": [
        {
            "potential_checks": "amount + addressMints[minterAddress][mintId] > maxMintPerWallet[mintId] == False",
            "involved_variables": [
                "addressMints",
                "minterAddress",
                "contractMintLive",
                "mintQuotas",
                "contractPresaleActive",
                "amount",
                "mintId",
                "maxMintPerWallet"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive",
                "addressMints",
                "mintQuotas",
                "contractPresaleActive",
                "maxMintPerWallet"
            ]
        },
        {
            "potential_checks": "amount == 0 == False",
            "involved_variables": [
                "addressMints",
                "minterAddress",
                "contractMintLive",
                "mintQuotas",
                "contractPresaleActive",
                "amount",
                "mintId",
                "maxMintPerWallet"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive",
                "addressMints",
                "mintQuotas",
                "contractPresaleActive",
                "maxMintPerWallet"
            ]
        },
        {
            "potential_checks": "! mintLive()",
            "involved_variables": [
                "addressMints",
                "minterAddress",
                "contractMintLive",
                "mintQuotas",
                "contractPresaleActive",
                "amount",
                "mintId",
                "maxMintPerWallet"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive",
                "addressMints",
                "mintQuotas",
                "contractPresaleActive",
                "maxMintPerWallet"
            ]
        },
        {
            "potential_checks": "! contractMintLive == False",
            "involved_variables": [
                "addressMints",
                "minterAddress",
                "contractMintLive",
                "mintQuotas",
                "contractPresaleActive",
                "amount",
                "mintId",
                "maxMintPerWallet"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive",
                "addressMints",
                "mintQuotas",
                "contractPresaleActive",
                "maxMintPerWallet"
            ]
        },
        {
            "potential_checks": "! contractPresaleActive[mintId] == False",
            "involved_variables": [
                "addressMints",
                "minterAddress",
                "contractMintLive",
                "mintQuotas",
                "contractPresaleActive",
                "amount",
                "mintId",
                "maxMintPerWallet"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive",
                "addressMints",
                "mintQuotas",
                "contractPresaleActive",
                "maxMintPerWallet"
            ]
        },
        {
            "potential_checks": "mintId != 0",
            "involved_variables": [
                "addressMints",
                "minterAddress",
                "contractMintLive",
                "mintQuotas",
                "contractPresaleActive",
                "amount",
                "mintId",
                "maxMintPerWallet"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive",
                "addressMints",
                "mintQuotas",
                "contractPresaleActive",
                "maxMintPerWallet"
            ]
        },
        {
            "potential_checks": "mintQuotas[mintId][minterAddress] == 0 == False",
            "involved_variables": [
                "addressMints",
                "minterAddress",
                "contractMintLive",
                "mintQuotas",
                "contractPresaleActive",
                "amount",
                "mintId",
                "maxMintPerWallet"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive",
                "addressMints",
                "mintQuotas",
                "contractPresaleActive",
                "maxMintPerWallet"
            ]
        },
        {
            "potential_checks": "amount > mintQuotas[mintId][minterAddress]",
            "involved_variables": [
                "addressMints",
                "minterAddress",
                "contractMintLive",
                "mintQuotas",
                "contractPresaleActive",
                "amount",
                "mintId",
                "maxMintPerWallet"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive",
                "addressMints",
                "mintQuotas",
                "contractPresaleActive",
                "maxMintPerWallet"
            ]
        }
    ],
    "batchMint(uint256 amount, uint256 mintId) returns (uint256)": [],
    "canDelegateMintCheck(uint256 amount, uint256 mintId, address vault, address minterAddress) returns (bool, string)": [
        {
            "potential_checks": "! IDelegateRegistry(DELEGATE_REGISTRY).checkDelegateForContract(minterAddress,vault,address(this),) == False",
            "involved_variables": [
                "vault",
                "minterAddress",
                "addressMints",
                "contractMintLive",
                "mintQuotas",
                "contractPresaleActive",
                "amount",
                "this",
                "mintId",
                "DELEGATE_REGISTRY",
                "maxMintPerWallet"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive",
                "addressMints",
                "mintQuotas",
                "contractPresaleActive",
                "DELEGATE_REGISTRY",
                "maxMintPerWallet"
            ]
        },
        {
            "potential_checks": "amount + addressMints[vault][mintId] > maxMintPerWallet[mintId] == False",
            "involved_variables": [
                "vault",
                "minterAddress",
                "addressMints",
                "contractMintLive",
                "mintQuotas",
                "contractPresaleActive",
                "amount",
                "this",
                "mintId",
                "DELEGATE_REGISTRY",
                "maxMintPerWallet"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive",
                "addressMints",
                "mintQuotas",
                "contractPresaleActive",
                "DELEGATE_REGISTRY",
                "maxMintPerWallet"
            ]
        },
        {
            "potential_checks": "amount == 0 == False",
            "involved_variables": [
                "vault",
                "minterAddress",
                "addressMints",
                "contractMintLive",
                "mintQuotas",
                "contractPresaleActive",
                "amount",
                "this",
                "mintId",
                "DELEGATE_REGISTRY",
                "maxMintPerWallet"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive",
                "addressMints",
                "mintQuotas",
                "contractPresaleActive",
                "DELEGATE_REGISTRY",
                "maxMintPerWallet"
            ]
        },
        {
            "potential_checks": "! mintLive()",
            "involved_variables": [
                "vault",
                "minterAddress",
                "addressMints",
                "contractMintLive",
                "mintQuotas",
                "contractPresaleActive",
                "amount",
                "this",
                "mintId",
                "DELEGATE_REGISTRY",
                "maxMintPerWallet"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive",
                "addressMints",
                "mintQuotas",
                "contractPresaleActive",
                "DELEGATE_REGISTRY",
                "maxMintPerWallet"
            ]
        },
        {
            "potential_checks": "! contractMintLive == False",
            "involved_variables": [
                "vault",
                "minterAddress",
                "addressMints",
                "contractMintLive",
                "mintQuotas",
                "contractPresaleActive",
                "amount",
                "this",
                "mintId",
                "DELEGATE_REGISTRY",
                "maxMintPerWallet"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive",
                "addressMints",
                "mintQuotas",
                "contractPresaleActive",
                "DELEGATE_REGISTRY",
                "maxMintPerWallet"
            ]
        },
        {
            "potential_checks": "! contractPresaleActive[mintId] == False",
            "involved_variables": [
                "vault",
                "minterAddress",
                "addressMints",
                "contractMintLive",
                "mintQuotas",
                "contractPresaleActive",
                "amount",
                "this",
                "mintId",
                "DELEGATE_REGISTRY",
                "maxMintPerWallet"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive",
                "addressMints",
                "mintQuotas",
                "contractPresaleActive",
                "DELEGATE_REGISTRY",
                "maxMintPerWallet"
            ]
        },
        {
            "potential_checks": "mintId != 0",
            "involved_variables": [
                "vault",
                "minterAddress",
                "addressMints",
                "contractMintLive",
                "mintQuotas",
                "contractPresaleActive",
                "amount",
                "this",
                "mintId",
                "DELEGATE_REGISTRY",
                "maxMintPerWallet"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive",
                "addressMints",
                "mintQuotas",
                "contractPresaleActive",
                "DELEGATE_REGISTRY",
                "maxMintPerWallet"
            ]
        },
        {
            "potential_checks": "mintQuotas[mintId][vault] == 0 == False",
            "involved_variables": [
                "vault",
                "minterAddress",
                "addressMints",
                "contractMintLive",
                "mintQuotas",
                "contractPresaleActive",
                "amount",
                "this",
                "mintId",
                "DELEGATE_REGISTRY",
                "maxMintPerWallet"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive",
                "addressMints",
                "mintQuotas",
                "contractPresaleActive",
                "DELEGATE_REGISTRY",
                "maxMintPerWallet"
            ]
        },
        {
            "potential_checks": "amount > mintQuotas[mintId][vault]",
            "involved_variables": [
                "vault",
                "minterAddress",
                "addressMints",
                "contractMintLive",
                "mintQuotas",
                "contractPresaleActive",
                "amount",
                "this",
                "mintId",
                "DELEGATE_REGISTRY",
                "maxMintPerWallet"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive",
                "addressMints",
                "mintQuotas",
                "contractPresaleActive",
                "DELEGATE_REGISTRY",
                "maxMintPerWallet"
            ]
        }
    ],
    "delegatedMint(uint256 amount, uint256 mintId, address vault) returns (uint256)": [],
    "quoteBatchMint(uint256 mintId, uint256 amount) returns (uint256, uint256)": [],
    "quoteAirdropFees(uint256 amount) returns (uint256)": [],
    "changeMintStatus(bool status)": [
        {
            "potential_checks": "owner() != msg.sender",
            "involved_variables": [
                "contractMintLive",
                "status"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive"
            ]
        },
        {
            "potential_checks": "contractMintLive == status == False",
            "involved_variables": [
                "contractMintLive",
                "status"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive"
            ]
        },
        {
            "potential_checks": "status == false == False",
            "involved_variables": [
                "contractMintLive",
                "status"
            ],
            "descriptions": "",
            "references": [
                "contractMintLive"
            ]
        }
    ],
    "setMintLiveTimestamp(uint256 timestamp)": [
        {
            "potential_checks": "owner() != msg.sender",
            "involved_variables": [],
            "descriptions": "",
            "references": []
        }
    ],
    "setBaseURI(string newBaseURI)": [
        {
            "potential_checks": "owner() != msg.sender",
            "involved_variables": [],
            "descriptions": "",
            "references": []
        }
    ],
    "withdrawMintFunds()": [
        {
            "potential_checks": "! success == False",
            "involved_variables": [
                "success"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "withdrawFeeFunds()": [
        {
            "potential_checks": "! success == False",
            "involved_variables": [
                "success"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "checkPendingBalance() returns (uint256)": [],
    "checkPendingBalanceFor(address user) returns (uint256)": [],
    "setNewKingdomlyFeeContract(KingdomlyFeeContract _kingdomlyFeeContract)": [
        {
            "potential_checks": "msg.sender != kingdomlyAdmin == False",
            "involved_variables": [
                "kingdomlyAdmin",
                "msg.sender",
                "_kingdomlyFeeContract"
            ],
            "descriptions": "",
            "references": [
                "kingdomlyAdmin"
            ]
        }
    ],
    "getKingdomlyFeeContract() returns (KingdomlyFeeContract)": [],
    "threeDollarsEth() returns (uint256)": []
}