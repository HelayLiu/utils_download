{
    "burn(uint256 amount)": [
        {
            "potential_checks": "accountBalance >= amount == False",
            "involved_variables": [
                "amount",
                "accountBalance",
                "account"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "burnFrom(address account, uint256 amount)": [
        {
            "potential_checks": "currentAllowance != type()(uint256).max",
            "involved_variables": [
                "amount",
                "spender",
                "currentAllowance",
                "owner"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "currentAllowance >= amount",
            "involved_variables": [
                "amount",
                "spender",
                "currentAllowance",
                "owner"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "name() returns (string)": [],
    "symbol() returns (string)": [],
    "decimals() returns (uint8)": [],
    "totalSupply() returns (uint256)": [],
    "balanceOf(address account) returns (uint256)": [],
    "transfer(address to, uint256 amount) returns (bool)": [],
    "allowance(address owner, address spender) returns (uint256)": [],
    "approve(address spender, uint256 amount) returns (bool)": [],
    "transferFrom(address from, address to, uint256 amount) returns (bool)": [],
    "increaseAllowance(address spender, uint256 addedValue) returns (bool)": [],
    "decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)": [
        {
            "potential_checks": "currentAllowance >= subtractedValue",
            "involved_variables": [
                "subtractedValue",
                "spender",
                "currentAllowance",
                "owner"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "supportsInterface(bytes4 interfaceId) returns (bool)": [],
    "hasRole(bytes32 role, address account) returns (bool)": [],
    "getRoleAdmin(bytes32 role) returns (bytes32)": [],
    "grantRole(bytes32 role, address account)": [],
    "revokeRole(bytes32 role, address account)": [],
    "renounceRole(bytes32 role, address account)": [],
    "mint(address account, uint256 amount)": [
        {
            "potential_checks": "! hasRole(role,account)",
            "involved_variables": [
                "role",
                "account"
            ],
            "descriptions": "",
            "references": []
        }
    ]
}