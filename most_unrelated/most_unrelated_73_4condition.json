{
    "pendingOwner() returns (address)": [],
    "transferOwnership(address newOwner)": [
        {
            "potential_checks": "owner() == msg.sender",
            "involved_variables": [
                "newOwner"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "acceptOwnership()": [
        {
            "potential_checks": "pendingOwner() == sender == False",
            "involved_variables": [
                "sender"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "owner() returns (address)": [],
    "renounceOwnership()": [
        {
            "potential_checks": "owner() == msg.sender == False",
            "involved_variables": [],
            "descriptions": "",
            "references": []
        }
    ],
    "transfer(address wallet, address[] players, uint64[] amounts)": [
        {
            "potential_checks": "owner() == msg.sender",
            "involved_variables": [
                "amounts",
                "len",
                "i"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "amounts.length != len == False",
            "involved_variables": [
                "amounts",
                "len",
                "i"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "i < len == False",
            "involved_variables": [
                "amounts",
                "len",
                "i"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "claim(address wallet, uint64 amount, bytes sig)": [
        {
            "potential_checks": "checkthresholds && amount > thresholds == False",
            "involved_variables": [
                "amount",
                "usedsignatures",
                "wallet",
                "sender",
                "checkthresholds",
                "signers",
                "_signer",
                "sig",
                "thresholds",
                "isBlackListed"
            ],
            "descriptions": "",
            "references": [
                "checkthresholds",
                "signers",
                "thresholds",
                "isBlackListed",
                "usedsignatures"
            ]
        },
        {
            "potential_checks": "isBlackListed[sender]",
            "involved_variables": [
                "amount",
                "usedsignatures",
                "wallet",
                "sender",
                "checkthresholds",
                "signers",
                "_signer",
                "sig",
                "thresholds",
                "isBlackListed"
            ],
            "descriptions": "",
            "references": [
                "checkthresholds",
                "signers",
                "thresholds",
                "isBlackListed",
                "usedsignatures"
            ]
        },
        {
            "potential_checks": "usedsignatures[sig] == False",
            "involved_variables": [
                "amount",
                "usedsignatures",
                "wallet",
                "sender",
                "checkthresholds",
                "signers",
                "_signer",
                "sig",
                "thresholds",
                "isBlackListed"
            ],
            "descriptions": "",
            "references": [
                "checkthresholds",
                "signers",
                "thresholds",
                "isBlackListed",
                "usedsignatures"
            ]
        },
        {
            "potential_checks": "! signers[_signer] == False",
            "involved_variables": [
                "amount",
                "usedsignatures",
                "wallet",
                "sender",
                "checkthresholds",
                "signers",
                "_signer",
                "sig",
                "thresholds",
                "isBlackListed"
            ],
            "descriptions": "",
            "references": [
                "checkthresholds",
                "signers",
                "thresholds",
                "isBlackListed",
                "usedsignatures"
            ]
        }
    ],
    "bigClaim(address wallet, uint64 amount, bytes[] sigs)": [
        {
            "potential_checks": "signumber != sigs.length == False",
            "involved_variables": [
                "thresholds",
                "amount",
                "signumber",
                "sender",
                "wallet",
                "sig",
                "sigs",
                "isBlackListed",
                "i"
            ],
            "descriptions": "",
            "references": [
                "thresholds",
                "isBlackListed",
                "signumber"
            ]
        },
        {
            "potential_checks": "amount < thresholds == False",
            "involved_variables": [
                "thresholds",
                "amount",
                "signumber",
                "sender",
                "wallet",
                "sig",
                "sigs",
                "isBlackListed",
                "i"
            ],
            "descriptions": "",
            "references": [
                "thresholds",
                "isBlackListed",
                "signumber"
            ]
        },
        {
            "potential_checks": "i < signumber",
            "involved_variables": [
                "thresholds",
                "amount",
                "signumber",
                "sender",
                "wallet",
                "sig",
                "sigs",
                "isBlackListed",
                "i"
            ],
            "descriptions": "",
            "references": [
                "thresholds",
                "isBlackListed",
                "signumber"
            ]
        },
        {
            "potential_checks": "isBlackListed[sender] == False",
            "involved_variables": [
                "thresholds",
                "amount",
                "signumber",
                "sender",
                "wallet",
                "sig",
                "sigs",
                "isBlackListed",
                "i"
            ],
            "descriptions": "",
            "references": [
                "thresholds",
                "isBlackListed",
                "signumber"
            ]
        }
    ],
    "setToken(address _token, uint8 _decimals)": [
        {
            "potential_checks": "owner() == msg.sender",
            "involved_variables": [
                "_token",
                "_decimals"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "_decimals < 19 == False",
            "involved_variables": [
                "_token",
                "_decimals"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "addBlackList(address[] _evilUsers)": [
        {
            "potential_checks": "owner() == msg.sender",
            "involved_variables": [
                "len",
                "i"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "i < len == False",
            "involved_variables": [
                "len",
                "i"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "removeBlackList(address[] _clearedUsers)": [
        {
            "potential_checks": "owner() == msg.sender",
            "involved_variables": [
                "len",
                "i"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "i < len == False",
            "involved_variables": [
                "len",
                "i"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "invalidateUnusedSignature(bytes[] signatures)": [
        {
            "potential_checks": "owner() == msg.sender",
            "involved_variables": [
                "len",
                "i"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "i < len == False",
            "involved_variables": [
                "len",
                "i"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "invalidateUnusedNonce(address[] addrs)": [
        {
            "potential_checks": "owner() == msg.sender",
            "involved_variables": [
                "len",
                "i"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "i < len == False",
            "involved_variables": [
                "len",
                "i"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "setSigNumber(uint8 _signumber)": [
        {
            "potential_checks": "owner() == msg.sender",
            "involved_variables": [
                "_signumber"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "_signumber > 1 == False",
            "involved_variables": [
                "_signumber"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "setThresholds(uint64 _thresholds)": [
        {
            "potential_checks": "owner() == msg.sender",
            "involved_variables": [
                "_thresholds"
            ],
            "descriptions": "",
            "references": []
        },
        {
            "potential_checks": "_thresholds != 0 == False",
            "involved_variables": [
                "_thresholds"
            ],
            "descriptions": "",
            "references": []
        }
    ],
    "setThresholds(bool flag)": [
        {
            "potential_checks": "owner() == msg.sender == False",
            "involved_variables": [],
            "descriptions": "",
            "references": []
        }
    ],
    "setSigner(address _signer, bool flag)": [
        {
            "potential_checks": "owner() == msg.sender == False",
            "involved_variables": [],
            "descriptions": "",
            "references": []
        }
    ],
    "withdrawsToken(address to)": [
        {
            "potential_checks": "owner() == msg.sender == False",
            "involved_variables": [],
            "descriptions": "",
            "references": []
        }
    ]
}