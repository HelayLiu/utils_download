{
    "numCheckpoints(address account) returns (uint32)": [],
    "checkpoints(address account, uint32 pos) returns (Checkpoints.Checkpoint208)": [],
    "clock() returns (uint48)": [],
    "CLOCK_MODE() returns (string)": [],
    "getVotes(address account) returns (uint256)": [],
    "getPastVotes(address account, uint256 timepoint) returns (uint256)": [],
    "getPastTotalSupply(uint256 timepoint) returns (uint256)": [],
    "delegates(address account) returns (address)": [],
    "delegate(address delegatee)": [],
    "delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)": [],
    "nonces(address owner) returns (uint256)": [],
    "eip712Domain() returns (bytes1, string, string, uint256, address, bytes32, uint256[])": [],
    "name() returns (string)": [],
    "symbol() returns (string)": [],
    "decimals() returns (uint8)": [],
    "totalSupply() returns (uint256)": [],
    "balanceOf(address account) returns (uint256)": [],
    "transfer(address to, uint256 value) returns (bool)": [],
    "allowance(address owner, address spender) returns (uint256)": [],
    "approve(address spender, uint256 value) returns (bool)": [],
    "transferFrom(address from, address to, uint256 value) returns (bool)": [
        {
            "potential_checks": "_allowances[from][msg.sender] >= value",
            "involved_variables": ["_allowances", "from", "msg.sender", "value"],
            "descriptions": "Ensure spender has sufficient allowance",
            "references": ["_balances", "_allowances"]
        }
    ],
    "permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)": [
        {
            "potential_checks": "block.timestamp <= deadline",
            "involved_variables": ["block.timestamp", "deadline"],
            "descriptions": "Prevent expired permit signatures",
            "references": []
        },
        {
            "potential_checks": "signer == owner",
            "involved_variables": ["signer", "owner", "v", "r", "s"],
            "descriptions": "Verify signature matches token owner",
            "references": ["_allowances"]
        }
    ],
    "DOMAIN_SEPARATOR() returns (bytes32)": []
}